<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Expense Tracker</title>
</head>
<body>
<section>
<form id = expForm>
    <label>Expense Amount:</label> 
    <input type="text" id="amount"> &ensp;
    <label>Choose a category:</label>
    <select id="category">
        <option selected>Choose Here</option>
        <option value="Grocery">Grocery</option>
        <option value="Fuel">Fuel</option>
        <option value="House Rent">House Rent</option>
        <option value="Tourism">Tourism</option> &ensp;
</select> &ensp;
<label>Expense Description:</label>
<input type="text" id = "desc"> &ensp;
<input type ="submit" id="btn" value="Add Expense"></button>
</form>
<ul id ="listDetails"></ul>
</section>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.27.2/axios.min.js"></script>
  <script src ="main.js"></script>  
</body>
</html>

"use strict";
const button = document.getElementById("btn");
const amount = document.getElementById("amount");
const description = document.getElementById("desc");
const category = document.getElementById("category");
const form = document.getElementById("expForm");
const listDetails = document.getElementById("listDetails");


form.addEventListener("submit", onClick);

function onClick(e) {
    e.preventDefault();
    if (amount.value === "" || description.value === "") {
        alert("Please Enter All Fields");
    }
    else {
        const expenseDetails = {
            expenseAmount: amount.value,
            expenseDescription: description.value,
            expenseCategory: category.value
        }
        //clearing fields
        amount.value = "";
        description.value="";
        category.value="";


       axios.post("https://crudcrud.com/api/5a65cc46a535451b91359d56767c56fb/expenseData", expenseDetails)
       .then((response) => {
        console.log(response);
        showDetailsOnScreen(response.data);
        //console.log(response)
    })
       .catch((err) => console.log(err))


        // //Representing objects as string: Serialization

        // let seri = JSON.stringify(expenseDetails);

        // //storing input data in local storage

        // localStorage.setItem(expenseDetails.expenseAmount, seri);
        // showDetailsOnScreen(expenseDetails);
    }

}

window.addEventListener("DOMContentLoaded", () => {

    axios.get("https://crudcrud.com/api/5a65cc46a535451b91359d56767c56fb/expenseData")
    .then((response) => {
        console.log(response);
        for (var i = 0; i < response.data.length; i++) {
            showDetailsOnScreen(response.data[i]);
        }

    //console.log(response)
    })
    .catch((err) => console.log(err))
    //})


    // Object.keys(localStorage).forEach((key) => {

    //     const stringifiedDetails = localStorage.getItem(key);
    //     const details = JSON.parse(stringifiedDetails);
    //     showDetailsOnScreen(details);
    // })

    })

function showDetailsOnScreen(expense) {
    if (localStorage.getItem(expense.expenseAmount !== null)) {
        removeUserFromScreen(expense.expenseAmount);
    }

    const parentNode = document.getElementById("listDetails");

    const childHTML = `<li id=${expense._id}>${expense.expenseAmount} : ${expense.expenseCategory}
    : ${expense.expenseDescription}
    <button onclick=deleteUser("${expense._id}")> Delete User </button>
    <button onclick=editDetails("${expense.expenseAmount}","${expense.expenseCategory}","${expense.expenseDescription}","${expense._id}")>
    Edit Details</button> </li>`;
    parentNode.innerHTML = parentNode.innerHTML + childHTML;
}

// Edit user details

function editDetails(amount,category,description,userId) {
    document.getElementById("amount").value = amount;
    document.getElementById("category").value = category;
    document.getElementById("desc").value = description;
    deleteUser(userId);
}

// Delete User

function deleteUser(userId) {

    axios.delete(`https://crudcrud.com/api/5a65cc46a535451b91359d56767c56fb/expenseData/${userId}`)
    .then((response) => {
        removeUserFromScreen(userId);
     //showUsersOnScreen(response.data);
     //console.log(response)
 })
    .catch((err) => console.log(err))



    //localStorage.removeItem(amount);
    //removeUserFromScreen(amount);
}

// Remove user from screen
function removeUserFromScreen(userId) {
const parentNode = document.getElementById("listDetails");
const deleteChild = document.getElementById(userId);
if(deleteChild) {
    parentNode.removeChild(deleteChild);
 }
}
